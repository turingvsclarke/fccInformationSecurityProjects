{"{\"assumptions\":{},\"sourceRoot\":\"/Users/turingvsclarke/FreeCodeCamp/InformationSecurity/stockPriceChecker/tests/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/turingvsclarke/FreeCodeCamp/InformationSecurity/stockPriceChecker\",\"filename\":\"/Users/turingvsclarke/FreeCodeCamp/InformationSecurity/stockPriceChecker/tests/2_functional-tests.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/turingvsclarke/FreeCodeCamp/InformationSecurity/stockPriceChecker\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:test":{"value":{"code":"const chaiHttp = require('chai-http');\nconst chai = require('chai');\nconst assert = chai.assert;\nconst server = require('../server.js');\nvar expect = chai.expect;\nchai.use(chaiHttp);\nsuite('Functional Tests', () => {\n  /// Test #1\n  test('#singleStockGETRequest', function (done) {\n    chai.request(server).get('/api/stock-prices?stock=GOOG').end(\n    // Check that res.body has stockData as a key\n    // Check that that stockData has stock as a string, price as a number, and that likes =1\n    (err, res) => {\n      expect(res.body).to.have.all.keys('stockData');\n      let stockData = res.body.stockData;\n      expect(res.body.stockData).to.have.all.keys('stock', 'price', 'likes');\n      expect(stockData.stock).to.be.a('string');\n      expect(stockData.price).to.be.a('number');\n      expect(stockData.likes).to.be.a('number');\n      assert.deepEqual(stockData.likes, 0, 'Looked up single stock');\n    });\n    done();\n  });\n\n  // Test #2\n  test('#singleStocksingleLikeGETRequest', function (done) {\n    chai.request(server).get('/api/stock-prices?stock=GOOG&like=true').end((err, res) => {\n      expect(res.body).to.have.all.keys('stockData');\n      let stockData = res.body.stockData;\n      expect(res.body.stockData).to.have.all.keys('stock', 'price', 'likes');\n      expect(stockData.stock).to.be.a('string');\n      expect(stockData.price).to.be.a('number');\n      expect(stockData.likes).to.be.a('number');\n      assert.deepEqual(stockData.likes, 1, 'Looked up single stock w// single like');\n    });\n    done();\n  });\n\n  // Test #3\n  test('#doubleLikingStock', function (done) {\n    chai.request(server).get('/api/stock-prices?stock=GOOG&like=true').end((err, res) => {\n      expect(res.body).to.have.all.keys('stockData');\n      let stockData = res.body.stockData;\n      expect(res.body.stockData).to.have.all.keys('stock', 'price', 'likes');\n      expect(stockData.stock).to.be.a('string');\n      expect(stockData.price).to.be.a('number');\n      expect(stockData.likes).to.be.a('number');\n      assert.deepEqual(stockData.likes, 1, 'Re-liked same stock');\n    });\n    done();\n  });\n\n  // Test #4\n  test('#twoStockGETRequest', function (done) {\n    chai.request(server).get('/api/stock-prices?stock=GOOG&stock=MSFT').end((err, res) => {\n      expect(res.body).to.have.all.keys('stockData');\n      let stockData = res.body.stockData;\n      expect(stockData).to.be.a('array');\n      expect(res.body.stockData[0]).to.have.all.keys('stock', 'price', 'rel_likes');\n      expect(res.body.stockData[1]).to.have.all.keys('stock', 'price', 'rel_likes');\n      expect(stockData[0].stock).to.be.a('string');\n      expect(stockData[0].price).to.be.a('number');\n      expect(stockData[0].rel_likes).to.be.a('number');\n      expect(stockData[1].stock).to.be.a('string');\n      expect(stockData[1].price).to.be.a('number');\n      expect(stockData[1].rel_likes).to.be.a('number');\n      assert.deepEqual(stockData[0].rel_likes, 0, 'Looked up two stocks');\n      assert.deepEqual(stockData[1].rel_likes, 0, 'Looked up two stocks');\n    });\n    done();\n  });\n\n  // Test #5\n  test('#doubleStockLikeGETRequest', function (done) {\n    chai.request(server).get('/api/stock-prices?stock=GOOG&stock=MSFT&like=true').end((err, res) => {\n      expect(res.body).to.have.all.keys('stockData');\n      let stockData = res.body.stockData;\n      expect(stockData).to.be.a('array');\n      //expect(res.body.stockData[0]).to.have.all.keys('stock','price','rel_likes');\n      //expect(res.body.stockData[1]).to.have.all.keys('stock','price','rel_likes');\n      expect(stockData[0].stock).to.be.a('string');\n      expect(stockData[0].price).to.be.a('number');\n      expect(stockData[0].rel_likes).to.be.a('number');\n      expect(stockData[1].stock).to.be.a('string');\n      expect(stockData[1].price).to.be.a('number');\n      expect(stockData[1].rel_likes).to.be.a('number');\n      assert.deepEqual(stockData[0].rel_likes, 1, 'Looked up two stocks');\n      assert.deepEqual(stockData[1].rel_likes, -1, 'Looked up two stocks');\n    });\n    done();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["chaiHttp","require","chai","assert","server","expect","use","suite","test","done","request","get","end","err","res","body","to","have","all","keys","stockData","stock","be","a","price","likes","deepEqual","rel_likes"],"sourceRoot":"/Users/turingvsclarke/FreeCodeCamp/InformationSecurity/stockPriceChecker/tests/","sources":["2_functional-tests.js"],"sourcesContent":["const chaiHttp = require('chai-http');\nconst chai = require('chai');\nconst assert = chai.assert;\nconst server = require('../server.js');\nvar expect=chai.expect;\n\nchai.use(chaiHttp);\n\nsuite('Functional Tests', () => {\n    /// Test #1\n    test('#singleStockGETRequest',function(done){\n        chai.request(server).get('/api/stock-prices?stock=GOOG').end(\n            // Check that res.body has stockData as a key\n            // Check that that stockData has stock as a string, price as a number, and that likes =1\n            (err,res)=>{\n                expect(res.body).to.have.all.keys('stockData');\n                let stockData=res.body.stockData;\n                expect(res.body.stockData).to.have.all.keys('stock','price','likes');\n                expect(stockData.stock).to.be.a('string')\n                expect(stockData.price).to.be.a('number')\n                expect(stockData.likes).to.be.a('number')\n                assert.deepEqual(stockData.likes,0,'Looked up single stock')\n            }\n        );\n        done();\n    })\n\n    // Test #2\n    test('#singleStocksingleLikeGETRequest',function(done){\n        chai.request(server).get('/api/stock-prices?stock=GOOG&like=true').end(\n            (err,res)=>{\n                expect(res.body).to.have.all.keys('stockData');\n                let stockData=res.body.stockData;\n                expect(res.body.stockData).to.have.all.keys('stock','price','likes');\n                expect(stockData.stock).to.be.a('string')\n                expect(stockData.price).to.be.a('number')\n                expect(stockData.likes).to.be.a('number')\n                assert.deepEqual(stockData.likes,1,'Looked up single stock w// single like')\n            }\n        );\n        done();\n    })\n\n    // Test #3\n    test('#doubleLikingStock',function(done){\n        chai.request(server).get('/api/stock-prices?stock=GOOG&like=true').end(\n            (err,res)=>{\n                expect(res.body).to.have.all.keys('stockData');\n                let stockData=res.body.stockData;\n                expect(res.body.stockData).to.have.all.keys('stock','price','likes');\n                expect(stockData.stock).to.be.a('string')\n                expect(stockData.price).to.be.a('number')\n                expect(stockData.likes).to.be.a('number')\n                assert.deepEqual(stockData.likes,1,'Re-liked same stock')\n            }\n        );\n        done();\n    })\n\n    // Test #4\n    test('#twoStockGETRequest',function(done){\n        chai.request(server).get('/api/stock-prices?stock=GOOG&stock=MSFT').end(\n            (err,res)=>{\n                expect(res.body).to.have.all.keys('stockData');\n                let stockData=res.body.stockData;\n                expect(stockData).to.be.a('array');\n                expect(res.body.stockData[0]).to.have.all.keys('stock','price','rel_likes');\n                expect(res.body.stockData[1]).to.have.all.keys('stock','price','rel_likes');\n                expect(stockData[0].stock).to.be.a('string')\n                expect(stockData[0].price).to.be.a('number')\n                expect(stockData[0].rel_likes).to.be.a('number')\n                expect(stockData[1].stock).to.be.a('string')\n                expect(stockData[1].price).to.be.a('number')\n                expect(stockData[1].rel_likes).to.be.a('number')\n\n                assert.deepEqual(stockData[0].rel_likes,0,'Looked up two stocks')\n                assert.deepEqual(stockData[1].rel_likes,0,'Looked up two stocks')             \n            }\n        );\n        done();\n    })\n\n    // Test #5\n    test('#doubleStockLikeGETRequest',function(done){\n        chai.request(server).get('/api/stock-prices?stock=GOOG&stock=MSFT&like=true').end(\n            (err,res)=>{\n                expect(res.body).to.have.all.keys('stockData');\n                let stockData=res.body.stockData;\n                expect(stockData).to.be.a('array');\n                //expect(res.body.stockData[0]).to.have.all.keys('stock','price','rel_likes');\n                //expect(res.body.stockData[1]).to.have.all.keys('stock','price','rel_likes');\n                expect(stockData[0].stock).to.be.a('string')\n                expect(stockData[0].price).to.be.a('number')\n                expect(stockData[0].rel_likes).to.be.a('number')\n                expect(stockData[1].stock).to.be.a('string')\n                expect(stockData[1].price).to.be.a('number')\n                expect(stockData[1].rel_likes).to.be.a('number')\n\n                assert.deepEqual(stockData[0].rel_likes,1,'Looked up two stocks')\n                assert.deepEqual(stockData[1].rel_likes,-1,'Looked up two stocks')             \n            }\n        );\n        done();\n    })  \n\n});\n"],"mappings":"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","ignoreList":[]}},"mtime":1723585868702}}